'[] Lightweight logger with license to kill

Uses "File"

Type Log007
  Private
    _fileName   As String
    
    _lastTrouble  As String
    _takeNotes As Long
    
    Function _levelOf(severity As String) As Long
      String severities(5) = "DEBUG", "INFO", "WARN", "ERROR", "FATAL"

      Return Array Scan severities(), Collate Ucase, =severity
    End Function
    
    Function _reportFatal(context As String, message As String) 
      MsgBox 0,
             StrFormat$("Fatal error has occured, program will be aborted.{1}{2}", $CRLF(2), message),
             %MB_ICONERROR | %MB_OK,
             context
      Stop
    End Function                                        
    
  Public
    Function _Create(fileName As String, Optional purge As Long = FALSE)
      Me._fileName = fileName                               
      Me._takeNotes = TRUE
      
      If purge Then FILE_Kill(Me._fileName)
    End Function
    
    Function Note(severity As String, context As String, message As String)
      message = Replace$(message, $CR, "$CR")
      message = Replace$(message, $LF, "$LF")     
      
      severity = Ucase$(severity)                               
      
      String logLine = StrFormat$("{1} {2} ({3}) [{4}] {5}",
                         Date$,
                         Time$,
                         severity,
                         context,
                         message)
      
      If Me._takeNotes Then
        FILE_Append(Me._fileName, logLine + $CRLF)  
      End If  
                             
      Select Case Me._levelOf(severity)
        Case Me._levelOf("error")          
          Me._lastTrouble = logLine
      
        Case > Me._levelOf("error")
          Me._reportFatal(context, message)        
        
      End Select
    End Function
    
    Function TakeNotes(flag As Long)
      Me._takeNotes = flag
    End Function
    
    Function InTrouble() As Long
      Return Len(Me._lastTrouble)
    End Function
    
    Function LastTrouble() As String
      Return Me._lastTrouble
    End Function
End Type
